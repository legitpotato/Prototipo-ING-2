generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  uid            String   @unique
  email          String   @unique
  rut            String   @unique
  firstName      String
  lastName       String
  birthDate      DateTime
  role           String   @default("vecino")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  pagos          Pago[]   @relation("UserToPago")
  anuncios     Anuncio[]
  comunidades     UsuarioComunidad[]
  incidenciasCreadas Incidencia[] @relation("IncidenciasDelCreador")
}

model Pago {
  id                Int      @id @default(autoincrement())
  descripcion       String
  fecha_emision     DateTime
  fecha_vencimiento DateTime
  monto_original    Float
  interes_acumulado Float
  monto_total       Float
  cuenta_destino    String
  estado            String   @default("pendiente")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  rut               String
  user              User     @relation("UserToPago", fields: [rut], references: [rut])
  comunidadId   Int
  comunidad     Comunidad @relation(fields: [comunidadId], references: [id])
}

model Comunidad {
  id           Int                  @id @default(autoincrement())
  nombre       String
  direccion    String
  descripcion  String?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt

  usuarios     UsuarioComunidad[]
  pagos        Pago[]
  incidencias  Incidencia[] 
  anuncios     Anuncio[]
}

model UsuarioComunidad {
  id           Int                  @id @default(autoincrement())
  userId       Int
  comunidadId  Int
  rol          RolUsuario
  estado       EstadoMiembro       @default(ACTIVO)
  fechaUnion   DateTime            @default(now())

  user         User                @relation(fields: [userId], references: [id])
  comunidad    Comunidad           @relation(fields: [comunidadId], references: [id])

  @@unique([userId, comunidadId], name: "userId_comunidadId")

}

enum RolUsuario {
  VECINO
  DIRECTIVA
  CONSERJE
  ADMIN
}

enum EstadoMiembro {
  ACTIVO
  INACTIVO
  PENDIENTE
}

model Incidencia {
  id          Int               @id @default(autoincrement())
  ubicacion   String
  importancia Importancia
  descripcion String
  estado      EstadoIncidencia
  fotos       String[]
  comunidadId Int
  comunidad   Comunidad         @relation(fields: [comunidadId], references: [id])
  creadorId   Int
  creador     User              @relation(name: "IncidenciasDelCreador", fields: [creadorId], references: [id])
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

enum Importancia {
  Alta
  Media
  Baja
}

enum EstadoIncidencia {
  Nuevo
  EnProceso
  Resuelto
}

model Anuncio {
  id             Int      @id @default(autoincrement())
  titulo         String
  contenido      String
  tipoAnuncio    String // 'general', 'reunion', 'recordatorio'
  permitirComentarios Boolean @default(true)
  permitirReacciones  Boolean @default(true)
  soloLectura    Boolean @default(false)
  fechaReunion   DateTime? // opcional
  plataforma     String?    // opcional
  enlaceReunion  String?    // opcional
  comunidadId    Int
  creadorId      Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  comunidad      Comunidad @relation(fields: [comunidadId], references: [id])
  creador        User      @relation(fields: [creadorId], references: [id])
}

